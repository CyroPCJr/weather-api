name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '21'
  GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.workers.max=2'
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🔧 Grant permission Gradle Wrapper
        run: chmod +x ./gradlew

      - name: 🐘 Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: ⚙️ Cache dependency
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
            .gradle/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: 🧹 Clean up previous build
        run: ./gradlew clean --no-daemon --stacktrace
        continue-on-error: true

      - name: 🔧 Compilation
        run: ./gradlew compileJava compileTestJava --no-daemon --stacktrace

      - name: 🧪 Kickoff Unit Tests
        run: ./gradlew test
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          SPRING_PROFILES_ACTIVE: test

      - name: 🛠️ Build app
        run: ./gradlew bootJar --no-daemon --stacktrace

      - name: 📦 Upload JAR como artifact
        uses: actions/upload-artifact@v4
        with:
          name: weather-api-jar
          path: build/libs/*.jar
          retention-days: 7

      - name: 🐳 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3


      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            cyropcjr/weather-api:${{ github.sha }}
            ${{ github.ref_name == 'main' && 'cyropcjr/weather-api:latest' || format('cyropcjr/weather-api:{0}', github.ref_name) }}
          cache-from: type=gha,scope=${{ github.ref_name }}
          cache-to: type=gha,mode=max,scope=${{ github.ref_name }}