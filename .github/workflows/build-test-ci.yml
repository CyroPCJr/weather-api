name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  JAVA_VERSION: '21'
  GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.workers.max=2'
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessário para análise de código completa

      - name: ☕ Configurar JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🔧 Dar permissão ao Gradle Wrapper
        run: chmod +x ./gradlew

      - name: 🐘 Configurar Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: ⚙️ Cache de dependências
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.m2/repository
            .gradle/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: 🧹 Limpar build anterior
        run: ./gradlew clean --no-daemon --stacktrace
        continue-on-error: true

      - name: 🔧 Compilar código
        run: ./gradlew compileJava compileTestJava --no-daemon --stacktrace

      - name: 🧪 Executar testes unitários
        run: ./gradlew test
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          SPRING_PROFILES_ACTIVE: test

      - name: 🛠️ Build aplicação
        run: ./gradlew bootJar --no-daemon --stacktrace

      - name: 📦 Upload JAR como artifact
        uses: actions/upload-artifact@v4
        with:
          name: weather-api-jar
          path: build/libs/*.jar
          retention-days: 7

#      - name: 🐳 Configurar Docker Buildx
#        uses: docker/setup-buildx-action@v3

#      - name: 🔑 Login no Docker Hub
#        if: github.event_name != 'pull_request'
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

#      - name: 🏷️ Extrair metadados
#        id: meta
#        uses: docker/metadata-action@v5
#        with:
#          images: ${{ secrets.DOCKER_USERNAME }}/weather-api
#          tags: |
#            type=ref,event=branch
#            type=ref,event=pr
#            type=sha,prefix={{branch}}-
#            type=raw,value=latest,enable={{is_default_branch}}

#      - name: 🐳 Build e Push Docker Image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          platforms: linux/amd64,linux/arm64
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
